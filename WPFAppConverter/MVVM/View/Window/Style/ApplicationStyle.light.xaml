<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Light Application -->

    <!-- Connecting svg file -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resource/Icon/IconSVG.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="NoTrigersHeaderButton" Color="Transparent"/>
    <SolidColorBrush x:Key="TrigerHeaderButton" Color="#262626"/>
    <SolidColorBrush x:Key="TrigerHeaderButton--exit" Color="Red"/>

    <SolidColorBrush x:Key="Text" Color="Black"/>
    <SolidColorBrush x:Key="HeaderText" Color="#FFF"/>
    <SolidColorBrush x:Key="HeaderText--title" Color="White"/>
    <SolidColorBrush x:Key="HeaderPanel" Color="#FFA2A2A2"/>

    <SolidColorBrush x:Key="MainLeftNavPanel" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="MainBackgroung" Color="White"/>

    <!-- Use in radiobutton left nav -->
    <SolidColorBrush x:Key="MainButtonBorderBrush" Color="#FF909090"/>
    <SolidColorBrush x:Key="RadioButtonBackground-static" Color="White"/>
    <SolidColorBrush x:Key="RadioButtonBackground-active" Color="#FFD8D8D8"/>
    <SolidColorBrush x:Key="RaidoButtonForeground" Color="Black"/>

    <!-- ScroolBar color -->
    <!-- TODO : ScroolBar colors -->
    <SolidColorBrush x:Key="StandardBrush" Color="#FF949494" />
    <SolidColorBrush x:Key="ThumbColor" Color="#FF8C8C8C" />
    <SolidColorBrush x:Key="BackgroundScroll" Color="#FFE4E4E4" />

    <!-- DataGrid Color -->
    <SolidColorBrush x:Key="BorderDataGrid" Color="#FFA5A5A5"/>
    <SolidColorBrush x:Key="BorderColummnDataGrid" Color="#DDDDDD"/>
    <SolidColorBrush x:Key="DataGridColorColumnHeader" Color="#FFDADADA"/>

    <!-- Button Color -->
    <SolidColorBrush x:Key="BackgroundButton" Color="#FFE4E4E4"/>
    <SolidColorBrush x:Key="ForegroundButton" Color="Black"/>
    <SolidColorBrush x:Key="BackgroundButton-active" Color="#FFAFAEAE"/>
    <SolidColorBrush x:Key="BorderBrushButton" Color="#333F3F3F"/>

    <!-- Header -->
    <Style x:Key="WindowBorderHeaderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource HeaderPanel}"/>
    </Style>

    <!-- Title WindowForms -->
    <Style x:Key="WindowLableHeaderStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource HeaderText--title}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="HeaderButton" TargetType="Button">
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource NoTrigersHeaderButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Margin="0,-5,0,0"
                               Foreground="{StaticResource HeaderText}" FontWeight="Medium"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource TrigerHeaderButton}"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Name, RelativeSource={RelativeSource Self}}" Value="Exit" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource TrigerHeaderButton--exit}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Main -->
    <Style x:Key="LeftNavPanel" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource MainLeftNavPanel}"/>
    </Style>

    <Style x:Key="MainNavPanel_RadioButton" TargetType="RadioButton">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.85"/>
            </Trigger>
        </Style.Triggers>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Padding="10" Background="{StaticResource RadioButtonBackground-static}"
                            Tag="{TemplateBinding Tag}" Margin="5" CornerRadius="15" Cursor="Hand"
                            Opacity="{TemplateBinding Opacity}">
                        <Image x:Name="IconImage" Width="25">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource AncestorType=Border}}" Value="Analitic">
                                            <Setter Property="Source" Value="{StaticResource courseIcon-black}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource AncestorType=Border}}" Value="Home">
                                            <Setter Property="Source" Value="{StaticResource homeIcon-black}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource AncestorType=Border}}" Value="Setting">
                                            <Setter Property="Source" Value="{StaticResource settingIcon-black}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource AncestorType=Border}}" Value="Convert">
                                            <Setter Property="Source" Value="{StaticResource convert-black}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>

                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" 
                                           ShadowDepth="0" 
                                           Color="Black"/>
                        </Border.Effect>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ViewAllButton-home" TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource MainLeftNavPanel}"/>
        <Setter Property="Foreground" Value="{StaticResource Text}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0,0,5,5" Background="{TemplateBinding Background}">
                        <Label Content="{TemplateBinding Content}" HorizontalAlignment="Center"
                               Foreground="{TemplateBinding Foreground}" FontWeight="SemiBold"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RepeatButton for scrolling -->
    <Style x:Key="ScrollButtons" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Thumb for scrolling -->
    <Style x:Key="ScrollThumbsVertical" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Name="Grid">
                        <Rectangle Name="Rectangle1"
						 Width="10"
						 Height="Auto"
						 HorizontalAlignment="Stretch"
						 VerticalAlignment="Stretch"
						 Fill="{TemplateBinding Background}"
						 RadiusX="4"
						 RadiusY="4"
                         Cursor="Hand"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollThumbsHorisontal" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Name="Grid">
                        <Rectangle Name="Rectangle1"
					 Width="10"
					 Height="Auto"
					 HorizontalAlignment="Stretch"
					 VerticalAlignment="Stretch"
					 Fill="{TemplateBinding Background}"
					 RadiusX="4"
					 RadiusY="4"
                     Cursor="Hand"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom scroll -->
    <Style TargetType="{x:Type ScrollBar}" x:Key="VerticalScrollBarStyle">
        <Setter Property="Background" Value="{StaticResource BackgroundScroll}" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}">
                        <Grid x:Name="GridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="18" />
                            </Grid.RowDefinitions>
                            <RepeatButton x:Name="DecreaseRepeat" Command="ScrollBar.LineUpCommand"
			                              Foreground="{StaticResource StandardBrush}" Style="{DynamicResource ScrollButtons}">
                                <Path x:Name="DecreaseArrow" HorizontalAlignment="Center"
					                  VerticalAlignment="Center" Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
					                    Fill="{StaticResource StandardBrush}" Cursor="Hand"/>
                            </RepeatButton>
                            <Track x:Name="PART_Track" Grid.Row="1" Focusable="false"
			                        IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{StaticResource ThumbColor}"
					                        Style="{DynamicResource ScrollThumbsVertical}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="IncreaseRepeat" Grid.Row="2" Command="ScrollBar.LineDownCommand"
			                                Foreground="{DynamicResource StandardBrush}" Style="{DynamicResource ScrollButtons}">
                                <Path x:Name="IncreaseArrow" HorizontalAlignment="Center" VerticalAlignment="Center"
					                    Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z " Fill="{StaticResource StandardBrush}"
                                      Cursor="Hand"/>
                            </RepeatButton>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}" x:Key="HorizontalScrollBarStyle">
        <Setter Property="Background" Value="{StaticResource BackgroundScroll}" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}"
                        Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeight}}">
                        <Grid x:Name="GridRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="18" />
                                <ColumnDefinition Width="0.00001*" />
                                <ColumnDefinition MaxWidth="18" />
                            </Grid.ColumnDefinitions>
                            <RepeatButton x:Name="DecreaseRepeat" Command="ScrollBar.LineLeftCommand"
                                      Foreground="{StaticResource StandardBrush}" Style="{DynamicResource ScrollButtons}">
                                <Path x:Name="DecreaseArrow" HorizontalAlignment="Center"
                                  VerticalAlignment="Center" Data="F1 M 0,3.5L 7,0L 7,7L 0,3.5 Z"
                                  Fill="{StaticResource StandardBrush}" Cursor="Hand"/>
                            </RepeatButton>
                            <Track x:Name="PART_Track" Grid.Column="1" Focusable="false"
                               IsDirectionReversed="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{StaticResource ThumbColor}"
                                       Style="{DynamicResource ScrollThumbsHorisontal}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="IncreaseRepeat" Grid.Column="2" Command="ScrollBar.LineRightCommand"
                                      Foreground="{DynamicResource StandardBrush}" Style="{DynamicResource ScrollButtons}">
                                <Path x:Name="IncreaseArrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Data="F1 M 7,3.5L 0,0L 0,7L 7,3.5 Z" Fill="{StaticResource StandardBrush}"
                                  Cursor="Hand"/>
                            </RepeatButton>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid">
        <!-- Make the border and grid lines a little less imposing -->
        <Setter Property="BorderBrush" Value="{StaticResource BorderDataGrid}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderColummnDataGrid}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderColummnDataGrid}" />

        <!-- Disable functions we don't need -->
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>

        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="{StaticResource DataGridColorColumnHeader}"/>
                    <Setter Property="Foreground" Value="{StaticResource Text}"/>
                    <Setter Property="FontWeight" Value="ExtraLight"/>
                    <Setter Property="Padding" Value="4"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <!-- Highlight a grid row as the mouse passes over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightCyan" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" 
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="Control">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentLabel" TargetType="Label">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{TemplateBinding Tag}" Foreground="{TemplateBinding Foreground}" 
                               FontSize="{TemplateBinding FontSize}" FontWeight="SemiBold"/>
                        <Label Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" 
                               FontSize="{TemplateBinding FontSize}" Margin="5,0,0,0"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">

                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="LightGray" Margin="2">
                        <ContentPresenter ContentSource="Header" Margin="2" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource BackgroundButton}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundButton}"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushButton}"/>

        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Label Foreground="{TemplateBinding Foreground}" FontWeight="SemiBold" Content="{TemplateBinding Content}"
                           VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{TemplateBinding FontSize}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundButton-active}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image" x:Key="ArrowLeftAndRight">
        <Setter Property="Source" Value="{StaticResource arrow_right_arrow_left-black}"/>
    </Style>
</ResourceDictionary>